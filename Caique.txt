#!/bin/bash

INVENTORY=$1

ansible-playbook -i "$INVENTORY" ansible/filebeat.yml --vault-password-file ~/.ssh/ansible-vault.yml --tags deploy -v > "$(basename "$INVENTORY").log" 2>&1
EXIT_CODE=$?

echo "$EXIT_CODE" > "$(basename "$INVENTORY").exit"

exit $EXIT_CODE





#!/bin/bash

if [[ $CI_MERGE_REQUEST_LABELS =~ "debug" ]]; then
    set -x
fi

export ANSIBLE_FORCE_COLOR=true
export ANSIBLE_HOST_KEY_CHECKING=False

INVENTORY_FILE=$1
shift

if [[ ! -f $INVENTORY_FILE ]]; then
    echo "$INVENTORY_FILE not found - no filebeat inventories to deploy"
    exit 0
fi

echo "Inventories:"
cat $INVENTORY_FILE

# Run ansible playbooks in parallel using the wrapper script
cat $INVENTORY_FILE | xargs -n1 -I{} -P8 bash -c './run_ansible.sh "{}"'
overall_status=0

# Print out logs and check exit codes
for inventory in $(cat $INVENTORY_FILE); do
    log_file=$(basename "$inventory").log
    exit_file=$(basename "$inventory").exit

    # Print log
    tail -n +1 "$log_file"

    # Check exit code
    exit_code=$(cat "$exit_file")
    if [ "$exit_code" -eq 4 ]; then
        echo "Specific known error occurred in inventory: $inventory"
        # Continue with the pipeline
    elif [ "$exit_code" -ne 0 ]; then
        echo "Error occurred in inventory: $inventory"
        overall_status=1
    fi

    # Clean up
    rm -f "$exit_file"
done

grep FAILED *.log && echo "Errors reported!"

# Exit with the overall status
exit $overall_status
